name: GoodMem Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

# Define permissions explicitly for security
permissions:
  contents: read     # For checkout, paths-filter
  packages: write    # For pushing to GHCR
  actions: write     # For GHA cache operations

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      build_cli: ${{ steps.filter.outputs.cli }}
      build_server: ${{ steps.filter.outputs.server }}
      build_proto: ${{ steps.filter.outputs.proto }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Path Filter
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            cli:
              - 'cli/**'
              - '.github/workflows/build.yml'
            server:
              - 'server/**'
              - '.github/workflows/build.yml'
            proto:
              - 'proto/**'
              - '.github/workflows/build.yml'

  build-server:
    needs: setup
    if: ${{ needs.setup.outputs.build_server == 'true' || needs.setup.outputs.build_proto == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle
          
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v3
        
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        
      - name: Compile server
        run: ./gradlew :server:compileJava
        
      - name: Run server tests
        run: ./gradlew :server:test
        
      - name: Build server JAR
        run: ./gradlew :server:shadowJar
        
      - name: Check Java formatting
        run: |
          ./server/format_java.sh --check server/src
        
      - name: Upload server JAR
        uses: actions/upload-artifact@v4
        with:
          name: server-jar
          path: server/build/libs/goodmem-server.jar
          if-no-files-found: error

  build-cli:
    needs: setup
    if: ${{ needs.setup.outputs.build_cli == 'true' || needs.setup.outputs.build_proto == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.2'  # Pinned to specific version for stability
          cache: true
          cache-dependency-path: cli/go.sum
          
      - name: Verify go.mod dependencies
        run: |
          cd cli
          go mod verify
          
      - name: Build CLI
        run: |
          cd cli
          go build -v -o ../dist/goodmem .
          
      - name: Run CLI tests
        run: |
          cd cli
          go test -v ./...
          
      - name: Upload CLI binary
        uses: actions/upload-artifact@v4
        with:
          name: cli-binary
          path: dist/goodmem
          if-no-files-found: error
          
  build-docker:
    needs: [build-server, build-cli]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download server JAR
        uses: actions/download-artifact@v4
        with:
          name: server-jar
          path: server/build/libs/
          
      - name: Download CLI binary
        uses: actions/download-artifact@v4
        with:
          name: cli-binary
          path: dist/
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata for Server Docker image
        id: meta-server
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/server
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=sha,format=short
            
      - name: Build and push server image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: server/Dockerfile
          push: true
          tags: ${{ steps.meta-server.outputs.tags }}
          labels: ${{ steps.meta-server.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max