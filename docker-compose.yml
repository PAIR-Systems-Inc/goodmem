version: '3.8'

services:
  db:
    build:
      context: ./database
      args:
        PG_VERSION: 16 # Consider updating to 17 when stable
    container_name: goodmem-db
    environment:
      # Values provided by environment variables (e.g., from run_localhost.sh or .env file)
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      # Mount host directory (path provided by env var) into container
      - ${DATA_DIR_BASE}/pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      # Use env var for user in healthcheck test
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z # Use specific stable release
    container_name: goodmem-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console UI port
    environment:
      # Values provided by environment variables
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      # Mount host directory (path provided by env var) into container
      - ${DATA_DIR_BASE}/minio_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "8080:8080"  # REST API
      - "9090:9090"  # gRPC
    depends_on:
      db:
        condition: service_healthy
      minio: # Add dependency on minio
        condition: service_healthy # Wait for minio healthcheck
    environment:
      # Values provided by environment variables
      - DB_URL=jdbc:postgresql://db:5432/${POSTGRES_DB} # Use DB name env var
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET=${MINIO_BUCKET_NAME} # Renamed for clarity
    restart: unless-stopped

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    environment:
      - GOODMEM_SERVER_URL=http://server:8080
    restart: unless-stopped
    depends_on:
      - server

# Note: Top-level 'volumes:' key is removed as we are using host mounts defined via env vars.
