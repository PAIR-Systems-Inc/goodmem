// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: goodmem/v1/apikey.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_STATUS_UNSPECIFIED Status = 0
	Status_ACTIVE             Status = 1
	Status_INACTIVE           Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "ACTIVE",
		2: "INACTIVE",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"ACTIVE":             1,
		"INACTIVE":           2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_goodmem_v1_apikey_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_goodmem_v1_apikey_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_goodmem_v1_apikey_proto_rawDescGZIP(), []int{0}
}

// Represents an API key for authenticating requests.
type ApiKey struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ApiKeyId  []byte                 `protobuf:"bytes,1,opt,name=api_key_id,json=apiKeyId,proto3" json:"api_key_id,omitempty"`  // UUID (16 bytes), primary identifier for the key record
	UserId    []byte                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // UUID (16 bytes) of the user this key belongs to
	KeyPrefix string                 `protobuf:"bytes,3,opt,name=key_prefix,json=keyPrefix,proto3" json:"key_prefix,omitempty"` // First few characters of the key for display/identification
	// DO NOT include key_hash or the raw key in standard responses.
	Status        Status                 `protobuf:"varint,4,opt,name=status,proto3,enum=goodmem.v1.Status" json:"status,omitempty"`                                                   // Status of the key
	Labels        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // User-defined labels for the key
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`                                                    // Optional expiration time
	LastUsedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_used_at,json=lastUsedAt,proto3" json:"last_used_at,omitempty"`                                               // Optional: Track last usage time
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedById   []byte                 `protobuf:"bytes,10,opt,name=created_by_id,json=createdById,proto3" json:"created_by_id,omitempty"` // User UUID (16 bytes) (usually the key owner or an admin)
	UpdatedById   []byte                 `protobuf:"bytes,11,opt,name=updated_by_id,json=updatedById,proto3" json:"updated_by_id,omitempty"` // User UUID (16 bytes)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiKey) Reset() {
	*x = ApiKey{}
	mi := &file_goodmem_v1_apikey_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiKey) ProtoMessage() {}

func (x *ApiKey) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_apikey_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiKey.ProtoReflect.Descriptor instead.
func (*ApiKey) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_apikey_proto_rawDescGZIP(), []int{0}
}

func (x *ApiKey) GetApiKeyId() []byte {
	if x != nil {
		return x.ApiKeyId
	}
	return nil
}

func (x *ApiKey) GetUserId() []byte {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *ApiKey) GetKeyPrefix() string {
	if x != nil {
		return x.KeyPrefix
	}
	return ""
}

func (x *ApiKey) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *ApiKey) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ApiKey) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *ApiKey) GetLastUsedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsedAt
	}
	return nil
}

func (x *ApiKey) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ApiKey) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ApiKey) GetCreatedById() []byte {
	if x != nil {
		return x.CreatedById
	}
	return nil
}

func (x *ApiKey) GetUpdatedById() []byte {
	if x != nil {
		return x.UpdatedById
	}
	return nil
}

type CreateApiKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Labels        map[string]string      `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Optional labels for the new key
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`                                                    // Optional expiration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateApiKeyRequest) Reset() {
	*x = CreateApiKeyRequest{}
	mi := &file_goodmem_v1_apikey_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiKeyRequest) ProtoMessage() {}

func (x *CreateApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_apikey_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_apikey_proto_rawDescGZIP(), []int{1}
}

func (x *CreateApiKeyRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateApiKeyRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// Special response for creation - includes the raw key.
type CreateApiKeyResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApiKeyMetadata *ApiKey                `protobuf:"bytes,1,opt,name=api_key_metadata,json=apiKeyMetadata,proto3" json:"api_key_metadata,omitempty"` // The metadata record created (excluding raw key/hash)
	RawApiKey      string                 `protobuf:"bytes,2,opt,name=raw_api_key,json=rawApiKey,proto3" json:"raw_api_key,omitempty"`                // The actual generated API key - client MUST save this.
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateApiKeyResponse) Reset() {
	*x = CreateApiKeyResponse{}
	mi := &file_goodmem_v1_apikey_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiKeyResponse) ProtoMessage() {}

func (x *CreateApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_apikey_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_apikey_proto_rawDescGZIP(), []int{2}
}

func (x *CreateApiKeyResponse) GetApiKeyMetadata() *ApiKey {
	if x != nil {
		return x.ApiKeyMetadata
	}
	return nil
}

func (x *CreateApiKeyResponse) GetRawApiKey() string {
	if x != nil {
		return x.RawApiKey
	}
	return ""
}

type ListApiKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListApiKeysRequest) Reset() {
	*x = ListApiKeysRequest{}
	mi := &file_goodmem_v1_apikey_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApiKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiKeysRequest) ProtoMessage() {}

func (x *ListApiKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_apikey_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiKeysRequest.ProtoReflect.Descriptor instead.
func (*ListApiKeysRequest) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_apikey_proto_rawDescGZIP(), []int{3}
}

type ListApiKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []*ApiKey              `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"` // List of keys (metadata only)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListApiKeysResponse) Reset() {
	*x = ListApiKeysResponse{}
	mi := &file_goodmem_v1_apikey_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApiKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApiKeysResponse) ProtoMessage() {}

func (x *ListApiKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_apikey_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApiKeysResponse.ProtoReflect.Descriptor instead.
func (*ListApiKeysResponse) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_apikey_proto_rawDescGZIP(), []int{4}
}

func (x *ListApiKeysResponse) GetKeys() []*ApiKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type UpdateApiKeyRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	ApiKeyId []byte                 `protobuf:"bytes,1,opt,name=api_key_id,json=apiKeyId,proto3" json:"api_key_id,omitempty"` // Required: ID of the key to update (16 bytes UUID)
	// Optional fields to update.
	Status *Status `protobuf:"varint,3,opt,name=status,proto3,enum=goodmem.v1.Status,oneof" json:"status,omitempty"`
	// Use a oneof containing fields of the WRAPPER message type.
	// This achieves mutual exclusion while complying with proto3 rules.
	//
	// Types that are valid to be assigned to LabelUpdateStrategy:
	//
	//	*UpdateApiKeyRequest_ReplaceLabels
	//	*UpdateApiKeyRequest_MergeLabels
	LabelUpdateStrategy isUpdateApiKeyRequest_LabelUpdateStrategy `protobuf_oneof:"label_update_strategy"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *UpdateApiKeyRequest) Reset() {
	*x = UpdateApiKeyRequest{}
	mi := &file_goodmem_v1_apikey_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiKeyRequest) ProtoMessage() {}

func (x *UpdateApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_apikey_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiKeyRequest.ProtoReflect.Descriptor instead.
func (*UpdateApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_apikey_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateApiKeyRequest) GetApiKeyId() []byte {
	if x != nil {
		return x.ApiKeyId
	}
	return nil
}

func (x *UpdateApiKeyRequest) GetStatus() Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *UpdateApiKeyRequest) GetLabelUpdateStrategy() isUpdateApiKeyRequest_LabelUpdateStrategy {
	if x != nil {
		return x.LabelUpdateStrategy
	}
	return nil
}

func (x *UpdateApiKeyRequest) GetReplaceLabels() *StringMap {
	if x != nil {
		if x, ok := x.LabelUpdateStrategy.(*UpdateApiKeyRequest_ReplaceLabels); ok {
			return x.ReplaceLabels
		}
	}
	return nil
}

func (x *UpdateApiKeyRequest) GetMergeLabels() *StringMap {
	if x != nil {
		if x, ok := x.LabelUpdateStrategy.(*UpdateApiKeyRequest_MergeLabels); ok {
			return x.MergeLabels
		}
	}
	return nil
}

type isUpdateApiKeyRequest_LabelUpdateStrategy interface {
	isUpdateApiKeyRequest_LabelUpdateStrategy()
}

type UpdateApiKeyRequest_ReplaceLabels struct {
	// If 'replace_labels' is the field set in the oneof, it signifies
	// the intent to replace all existing labels with this set.
	ReplaceLabels *StringMap `protobuf:"bytes,2,opt,name=replace_labels,json=replaceLabels,proto3,oneof"`
}

type UpdateApiKeyRequest_MergeLabels struct {
	// If 'merge_labels' is the field set in the oneof, it signifies
	// the intent to merge these labels with existing ones.
	MergeLabels *StringMap `protobuf:"bytes,4,opt,name=merge_labels,json=mergeLabels,proto3,oneof"`
}

func (*UpdateApiKeyRequest_ReplaceLabels) isUpdateApiKeyRequest_LabelUpdateStrategy() {}

func (*UpdateApiKeyRequest_MergeLabels) isUpdateApiKeyRequest_LabelUpdateStrategy() {}

type DeleteApiKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKeyId      []byte                 `protobuf:"bytes,1,opt,name=api_key_id,json=apiKeyId,proto3" json:"api_key_id,omitempty"` // Required: ID of the key to delete/revoke (16 bytes UUID).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteApiKeyRequest) Reset() {
	*x = DeleteApiKeyRequest{}
	mi := &file_goodmem_v1_apikey_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiKeyRequest) ProtoMessage() {}

func (x *DeleteApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_apikey_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_apikey_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteApiKeyRequest) GetApiKeyId() []byte {
	if x != nil {
		return x.ApiKeyId
	}
	return nil
}

var File_goodmem_v1_apikey_proto protoreflect.FileDescriptor

const file_goodmem_v1_apikey_proto_rawDesc = "" +
	"\n" +
	"\x17goodmem/v1/apikey.proto\x12\n" +
	"goodmem.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x17goodmem/v1/common.proto\"\xb4\x04\n" +
	"\x06ApiKey\x12\x1c\n" +
	"\n" +
	"api_key_id\x18\x01 \x01(\fR\bapiKeyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\fR\x06userId\x12\x1d\n" +
	"\n" +
	"key_prefix\x18\x03 \x01(\tR\tkeyPrefix\x12*\n" +
	"\x06status\x18\x04 \x01(\x0e2\x12.goodmem.v1.StatusR\x06status\x126\n" +
	"\x06labels\x18\x05 \x03(\v2\x1e.goodmem.v1.ApiKey.LabelsEntryR\x06labels\x129\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12<\n" +
	"\flast_used_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastUsedAt\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\"\n" +
	"\rcreated_by_id\x18\n" +
	" \x01(\fR\vcreatedById\x12\"\n" +
	"\rupdated_by_id\x18\v \x01(\fR\vupdatedById\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd0\x01\n" +
	"\x13CreateApiKeyRequest\x12C\n" +
	"\x06labels\x18\x01 \x03(\v2+.goodmem.v1.CreateApiKeyRequest.LabelsEntryR\x06labels\x129\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"t\n" +
	"\x14CreateApiKeyResponse\x12<\n" +
	"\x10api_key_metadata\x18\x01 \x01(\v2\x12.goodmem.v1.ApiKeyR\x0eapiKeyMetadata\x12\x1e\n" +
	"\vraw_api_key\x18\x02 \x01(\tR\trawApiKey\"\x14\n" +
	"\x12ListApiKeysRequest\"=\n" +
	"\x13ListApiKeysResponse\x12&\n" +
	"\x04keys\x18\x01 \x03(\v2\x12.goodmem.v1.ApiKeyR\x04keys\"\x84\x02\n" +
	"\x13UpdateApiKeyRequest\x12\x1c\n" +
	"\n" +
	"api_key_id\x18\x01 \x01(\fR\bapiKeyId\x12/\n" +
	"\x06status\x18\x03 \x01(\x0e2\x12.goodmem.v1.StatusH\x01R\x06status\x88\x01\x01\x12>\n" +
	"\x0ereplace_labels\x18\x02 \x01(\v2\x15.goodmem.v1.StringMapH\x00R\rreplaceLabels\x12:\n" +
	"\fmerge_labels\x18\x04 \x01(\v2\x15.goodmem.v1.StringMapH\x00R\vmergeLabelsB\x17\n" +
	"\x15label_update_strategyB\t\n" +
	"\a_status\"3\n" +
	"\x13DeleteApiKeyRequest\x12\x1c\n" +
	"\n" +
	"api_key_id\x18\x01 \x01(\fR\bapiKeyId*:\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x01\x12\f\n" +
	"\bINACTIVE\x10\x022\xc0\x02\n" +
	"\rApiKeyService\x12Q\n" +
	"\fCreateApiKey\x12\x1f.goodmem.v1.CreateApiKeyRequest\x1a .goodmem.v1.CreateApiKeyResponse\x12N\n" +
	"\vListApiKeys\x12\x1e.goodmem.v1.ListApiKeysRequest\x1a\x1f.goodmem.v1.ListApiKeysResponse\x12C\n" +
	"\fUpdateApiKey\x12\x1f.goodmem.v1.UpdateApiKeyRequest\x1a\x12.goodmem.v1.ApiKey\x12G\n" +
	"\fDeleteApiKey\x12\x1f.goodmem.v1.DeleteApiKeyRequest\x1a\x16.google.protobuf.EmptyB/Z-github.com/pairsys/goodmem/cli/gen/goodmem/v1b\x06proto3"

var (
	file_goodmem_v1_apikey_proto_rawDescOnce sync.Once
	file_goodmem_v1_apikey_proto_rawDescData []byte
)

func file_goodmem_v1_apikey_proto_rawDescGZIP() []byte {
	file_goodmem_v1_apikey_proto_rawDescOnce.Do(func() {
		file_goodmem_v1_apikey_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_goodmem_v1_apikey_proto_rawDesc), len(file_goodmem_v1_apikey_proto_rawDesc)))
	})
	return file_goodmem_v1_apikey_proto_rawDescData
}

var file_goodmem_v1_apikey_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_goodmem_v1_apikey_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_goodmem_v1_apikey_proto_goTypes = []any{
	(Status)(0),                   // 0: goodmem.v1.Status
	(*ApiKey)(nil),                // 1: goodmem.v1.ApiKey
	(*CreateApiKeyRequest)(nil),   // 2: goodmem.v1.CreateApiKeyRequest
	(*CreateApiKeyResponse)(nil),  // 3: goodmem.v1.CreateApiKeyResponse
	(*ListApiKeysRequest)(nil),    // 4: goodmem.v1.ListApiKeysRequest
	(*ListApiKeysResponse)(nil),   // 5: goodmem.v1.ListApiKeysResponse
	(*UpdateApiKeyRequest)(nil),   // 6: goodmem.v1.UpdateApiKeyRequest
	(*DeleteApiKeyRequest)(nil),   // 7: goodmem.v1.DeleteApiKeyRequest
	nil,                           // 8: goodmem.v1.ApiKey.LabelsEntry
	nil,                           // 9: goodmem.v1.CreateApiKeyRequest.LabelsEntry
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*StringMap)(nil),             // 11: goodmem.v1.StringMap
	(*emptypb.Empty)(nil),         // 12: google.protobuf.Empty
}
var file_goodmem_v1_apikey_proto_depIdxs = []int32{
	0,  // 0: goodmem.v1.ApiKey.status:type_name -> goodmem.v1.Status
	8,  // 1: goodmem.v1.ApiKey.labels:type_name -> goodmem.v1.ApiKey.LabelsEntry
	10, // 2: goodmem.v1.ApiKey.expires_at:type_name -> google.protobuf.Timestamp
	10, // 3: goodmem.v1.ApiKey.last_used_at:type_name -> google.protobuf.Timestamp
	10, // 4: goodmem.v1.ApiKey.created_at:type_name -> google.protobuf.Timestamp
	10, // 5: goodmem.v1.ApiKey.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 6: goodmem.v1.CreateApiKeyRequest.labels:type_name -> goodmem.v1.CreateApiKeyRequest.LabelsEntry
	10, // 7: goodmem.v1.CreateApiKeyRequest.expires_at:type_name -> google.protobuf.Timestamp
	1,  // 8: goodmem.v1.CreateApiKeyResponse.api_key_metadata:type_name -> goodmem.v1.ApiKey
	1,  // 9: goodmem.v1.ListApiKeysResponse.keys:type_name -> goodmem.v1.ApiKey
	0,  // 10: goodmem.v1.UpdateApiKeyRequest.status:type_name -> goodmem.v1.Status
	11, // 11: goodmem.v1.UpdateApiKeyRequest.replace_labels:type_name -> goodmem.v1.StringMap
	11, // 12: goodmem.v1.UpdateApiKeyRequest.merge_labels:type_name -> goodmem.v1.StringMap
	2,  // 13: goodmem.v1.ApiKeyService.CreateApiKey:input_type -> goodmem.v1.CreateApiKeyRequest
	4,  // 14: goodmem.v1.ApiKeyService.ListApiKeys:input_type -> goodmem.v1.ListApiKeysRequest
	6,  // 15: goodmem.v1.ApiKeyService.UpdateApiKey:input_type -> goodmem.v1.UpdateApiKeyRequest
	7,  // 16: goodmem.v1.ApiKeyService.DeleteApiKey:input_type -> goodmem.v1.DeleteApiKeyRequest
	3,  // 17: goodmem.v1.ApiKeyService.CreateApiKey:output_type -> goodmem.v1.CreateApiKeyResponse
	5,  // 18: goodmem.v1.ApiKeyService.ListApiKeys:output_type -> goodmem.v1.ListApiKeysResponse
	1,  // 19: goodmem.v1.ApiKeyService.UpdateApiKey:output_type -> goodmem.v1.ApiKey
	12, // 20: goodmem.v1.ApiKeyService.DeleteApiKey:output_type -> google.protobuf.Empty
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_goodmem_v1_apikey_proto_init() }
func file_goodmem_v1_apikey_proto_init() {
	if File_goodmem_v1_apikey_proto != nil {
		return
	}
	file_goodmem_v1_common_proto_init()
	file_goodmem_v1_apikey_proto_msgTypes[5].OneofWrappers = []any{
		(*UpdateApiKeyRequest_ReplaceLabels)(nil),
		(*UpdateApiKeyRequest_MergeLabels)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_goodmem_v1_apikey_proto_rawDesc), len(file_goodmem_v1_apikey_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goodmem_v1_apikey_proto_goTypes,
		DependencyIndexes: file_goodmem_v1_apikey_proto_depIdxs,
		EnumInfos:         file_goodmem_v1_apikey_proto_enumTypes,
		MessageInfos:      file_goodmem_v1_apikey_proto_msgTypes,
	}.Build()
	File_goodmem_v1_apikey_proto = out.File
	file_goodmem_v1_apikey_proto_goTypes = nil
	file_goodmem_v1_apikey_proto_depIdxs = nil
}
