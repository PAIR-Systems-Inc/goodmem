// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: goodmem/v1/memory.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a logical memory unit, potentially containing multiple chunks/vectors.
type Memory struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MemoryId           []byte                 `protobuf:"bytes,1,opt,name=memory_id,json=memoryId,proto3" json:"memory_id,omitempty"`                                                           // UUID (16 bytes)
	SpaceId            []byte                 `protobuf:"bytes,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                                                              // UUID (16 bytes) of the parent space
	OriginalContentRef string                 `protobuf:"bytes,3,opt,name=original_content_ref,json=originalContentRef,proto3" json:"original_content_ref,omitempty"`                           // Reference (e.g., URI, path) or potentially bytes
	ContentType        string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`                                                  // e.g., "text/plain", "application/pdf"
	Metadata           map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Arbitrary key-value metadata
	ProcessingStatus   string                 `protobuf:"bytes,6,opt,name=processing_status,json=processingStatus,proto3" json:"processing_status,omitempty"`                                   // e.g., "PENDING", "PROCESSING", "COMPLETED", "FAILED"
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedById        []byte                 `protobuf:"bytes,9,opt,name=created_by_id,json=createdById,proto3" json:"created_by_id,omitempty"`  // User UUID (16 bytes)
	UpdatedById        []byte                 `protobuf:"bytes,10,opt,name=updated_by_id,json=updatedById,proto3" json:"updated_by_id,omitempty"` // User UUID (16 bytes)
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Memory) Reset() {
	*x = Memory{}
	mi := &file_goodmem_v1_memory_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Memory) ProtoMessage() {}

func (x *Memory) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_memory_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Memory.ProtoReflect.Descriptor instead.
func (*Memory) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_memory_proto_rawDescGZIP(), []int{0}
}

func (x *Memory) GetMemoryId() []byte {
	if x != nil {
		return x.MemoryId
	}
	return nil
}

func (x *Memory) GetSpaceId() []byte {
	if x != nil {
		return x.SpaceId
	}
	return nil
}

func (x *Memory) GetOriginalContentRef() string {
	if x != nil {
		return x.OriginalContentRef
	}
	return ""
}

func (x *Memory) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Memory) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Memory) GetProcessingStatus() string {
	if x != nil {
		return x.ProcessingStatus
	}
	return ""
}

func (x *Memory) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Memory) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Memory) GetCreatedById() []byte {
	if x != nil {
		return x.CreatedById
	}
	return nil
}

func (x *Memory) GetUpdatedById() []byte {
	if x != nil {
		return x.UpdatedById
	}
	return nil
}

// Represents a chunk derived from a Memory, associated with a vector embedding.
// NOTE: Chunks might be primarily an internal concept for vector search.
// Exposing them directly via API might only be needed for advanced use cases or diagnostics.
// The MemoryService below focuses on the parent Memory object.
type MemoryChunk struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ChunkId             []byte                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`                                        // UUID (16 bytes)
	MemoryId            []byte                 `protobuf:"bytes,2,opt,name=memory_id,json=memoryId,proto3" json:"memory_id,omitempty"`                                     // UUID (16 bytes) of the parent memory
	ChunkSequenceNumber int32                  `protobuf:"varint,3,opt,name=chunk_sequence_number,json=chunkSequenceNumber,proto3" json:"chunk_sequence_number,omitempty"` // Order of the chunk within the memory
	ChunkText           string                 `protobuf:"bytes,4,opt,name=chunk_text,json=chunkText,proto3" json:"chunk_text,omitempty"`                                  // Text content of the chunk (optional if derivable)
	EmbeddingVector     []float32              `protobuf:"fixed32,5,rep,packed,name=embedding_vector,json=embeddingVector,proto3" json:"embedding_vector,omitempty"`       // Vector embedding (e.g., 1536 floats). Not typically sent over API.
	// Server handles actual vector storage/dimensionality.
	VectorStatus  string                 `protobuf:"bytes,6,opt,name=vector_status,json=vectorStatus,proto3" json:"vector_status,omitempty"` // e.g., "PENDING", "GENERATED", "FAILED"
	StartOffset   int32                  `protobuf:"varint,7,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`   // Optional: position in original content
	EndOffset     int32                  `protobuf:"varint,8,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`         // Optional: position in original content
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedById   []byte                 `protobuf:"bytes,11,opt,name=created_by_id,json=createdById,proto3" json:"created_by_id,omitempty"` // User UUID (16 bytes)
	UpdatedById   []byte                 `protobuf:"bytes,12,opt,name=updated_by_id,json=updatedById,proto3" json:"updated_by_id,omitempty"` // User UUID (16 bytes)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryChunk) Reset() {
	*x = MemoryChunk{}
	mi := &file_goodmem_v1_memory_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryChunk) ProtoMessage() {}

func (x *MemoryChunk) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_memory_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryChunk.ProtoReflect.Descriptor instead.
func (*MemoryChunk) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_memory_proto_rawDescGZIP(), []int{1}
}

func (x *MemoryChunk) GetChunkId() []byte {
	if x != nil {
		return x.ChunkId
	}
	return nil
}

func (x *MemoryChunk) GetMemoryId() []byte {
	if x != nil {
		return x.MemoryId
	}
	return nil
}

func (x *MemoryChunk) GetChunkSequenceNumber() int32 {
	if x != nil {
		return x.ChunkSequenceNumber
	}
	return 0
}

func (x *MemoryChunk) GetChunkText() string {
	if x != nil {
		return x.ChunkText
	}
	return ""
}

func (x *MemoryChunk) GetEmbeddingVector() []float32 {
	if x != nil {
		return x.EmbeddingVector
	}
	return nil
}

func (x *MemoryChunk) GetVectorStatus() string {
	if x != nil {
		return x.VectorStatus
	}
	return ""
}

func (x *MemoryChunk) GetStartOffset() int32 {
	if x != nil {
		return x.StartOffset
	}
	return 0
}

func (x *MemoryChunk) GetEndOffset() int32 {
	if x != nil {
		return x.EndOffset
	}
	return 0
}

func (x *MemoryChunk) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MemoryChunk) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MemoryChunk) GetCreatedById() []byte {
	if x != nil {
		return x.CreatedById
	}
	return nil
}

func (x *MemoryChunk) GetUpdatedById() []byte {
	if x != nil {
		return x.UpdatedById
	}
	return nil
}

type CreateMemoryRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SpaceId            []byte                 `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                                    // Required: Space to create the memory in (16 bytes UUID).
	OriginalContentRef string                 `protobuf:"bytes,2,opt,name=original_content_ref,json=originalContentRef,proto3" json:"original_content_ref,omitempty"` // Reference to content, or bytes payload
	ContentType        string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Metadata           map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // created_by_id derived from auth context.
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateMemoryRequest) Reset() {
	*x = CreateMemoryRequest{}
	mi := &file_goodmem_v1_memory_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMemoryRequest) ProtoMessage() {}

func (x *CreateMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_memory_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMemoryRequest.ProtoReflect.Descriptor instead.
func (*CreateMemoryRequest) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_memory_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMemoryRequest) GetSpaceId() []byte {
	if x != nil {
		return x.SpaceId
	}
	return nil
}

func (x *CreateMemoryRequest) GetOriginalContentRef() string {
	if x != nil {
		return x.OriginalContentRef
	}
	return ""
}

func (x *CreateMemoryRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *CreateMemoryRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GetMemoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemoryId      []byte                 `protobuf:"bytes,1,opt,name=memory_id,json=memoryId,proto3" json:"memory_id,omitempty"` // UUID (16 bytes)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMemoryRequest) Reset() {
	*x = GetMemoryRequest{}
	mi := &file_goodmem_v1_memory_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemoryRequest) ProtoMessage() {}

func (x *GetMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_memory_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemoryRequest.ProtoReflect.Descriptor instead.
func (*GetMemoryRequest) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_memory_proto_rawDescGZIP(), []int{3}
}

func (x *GetMemoryRequest) GetMemoryId() []byte {
	if x != nil {
		return x.MemoryId
	}
	return nil
}

type ListMemoriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       []byte                 `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"` // Required: Scope memories to a space (16 bytes UUID).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMemoriesRequest) Reset() {
	*x = ListMemoriesRequest{}
	mi := &file_goodmem_v1_memory_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMemoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMemoriesRequest) ProtoMessage() {}

func (x *ListMemoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_memory_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMemoriesRequest.ProtoReflect.Descriptor instead.
func (*ListMemoriesRequest) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_memory_proto_rawDescGZIP(), []int{4}
}

func (x *ListMemoriesRequest) GetSpaceId() []byte {
	if x != nil {
		return x.SpaceId
	}
	return nil
}

type ListMemoriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Memories      []*Memory              `protobuf:"bytes,1,rep,name=memories,proto3" json:"memories,omitempty"` // Add pagination tokens if needed.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMemoriesResponse) Reset() {
	*x = ListMemoriesResponse{}
	mi := &file_goodmem_v1_memory_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMemoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMemoriesResponse) ProtoMessage() {}

func (x *ListMemoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_memory_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMemoriesResponse.ProtoReflect.Descriptor instead.
func (*ListMemoriesResponse) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_memory_proto_rawDescGZIP(), []int{5}
}

func (x *ListMemoriesResponse) GetMemories() []*Memory {
	if x != nil {
		return x.Memories
	}
	return nil
}

type DeleteMemoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemoryId      []byte                 `protobuf:"bytes,1,opt,name=memory_id,json=memoryId,proto3" json:"memory_id,omitempty"` // UUID (16 bytes)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMemoryRequest) Reset() {
	*x = DeleteMemoryRequest{}
	mi := &file_goodmem_v1_memory_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemoryRequest) ProtoMessage() {}

func (x *DeleteMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goodmem_v1_memory_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteMemoryRequest) Descriptor() ([]byte, []int) {
	return file_goodmem_v1_memory_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteMemoryRequest) GetMemoryId() []byte {
	if x != nil {
		return x.MemoryId
	}
	return nil
}

var File_goodmem_v1_memory_proto protoreflect.FileDescriptor

const file_goodmem_v1_memory_proto_rawDesc = "" +
	"\n" +
	"\x17goodmem/v1/memory.proto\x12\n" +
	"goodmem.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xfb\x03\n" +
	"\x06Memory\x12\x1b\n" +
	"\tmemory_id\x18\x01 \x01(\fR\bmemoryId\x12\x19\n" +
	"\bspace_id\x18\x02 \x01(\fR\aspaceId\x120\n" +
	"\x14original_content_ref\x18\x03 \x01(\tR\x12originalContentRef\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12<\n" +
	"\bmetadata\x18\x05 \x03(\v2 .goodmem.v1.Memory.MetadataEntryR\bmetadata\x12+\n" +
	"\x11processing_status\x18\x06 \x01(\tR\x10processingStatus\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\"\n" +
	"\rcreated_by_id\x18\t \x01(\fR\vcreatedById\x12\"\n" +
	"\rupdated_by_id\x18\n" +
	" \x01(\fR\vupdatedById\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe8\x03\n" +
	"\vMemoryChunk\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\fR\achunkId\x12\x1b\n" +
	"\tmemory_id\x18\x02 \x01(\fR\bmemoryId\x122\n" +
	"\x15chunk_sequence_number\x18\x03 \x01(\x05R\x13chunkSequenceNumber\x12\x1d\n" +
	"\n" +
	"chunk_text\x18\x04 \x01(\tR\tchunkText\x12)\n" +
	"\x10embedding_vector\x18\x05 \x03(\x02R\x0fembeddingVector\x12#\n" +
	"\rvector_status\x18\x06 \x01(\tR\fvectorStatus\x12!\n" +
	"\fstart_offset\x18\a \x01(\x05R\vstartOffset\x12\x1d\n" +
	"\n" +
	"end_offset\x18\b \x01(\x05R\tendOffset\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\"\n" +
	"\rcreated_by_id\x18\v \x01(\fR\vcreatedById\x12\"\n" +
	"\rupdated_by_id\x18\f \x01(\fR\vupdatedById\"\x8d\x02\n" +
	"\x13CreateMemoryRequest\x12\x19\n" +
	"\bspace_id\x18\x01 \x01(\fR\aspaceId\x120\n" +
	"\x14original_content_ref\x18\x02 \x01(\tR\x12originalContentRef\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12I\n" +
	"\bmetadata\x18\x04 \x03(\v2-.goodmem.v1.CreateMemoryRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"/\n" +
	"\x10GetMemoryRequest\x12\x1b\n" +
	"\tmemory_id\x18\x01 \x01(\fR\bmemoryId\"0\n" +
	"\x13ListMemoriesRequest\x12\x19\n" +
	"\bspace_id\x18\x01 \x01(\fR\aspaceId\"F\n" +
	"\x14ListMemoriesResponse\x12.\n" +
	"\bmemories\x18\x01 \x03(\v2\x12.goodmem.v1.MemoryR\bmemories\"2\n" +
	"\x13DeleteMemoryRequest\x12\x1b\n" +
	"\tmemory_id\x18\x01 \x01(\fR\bmemoryId2\xaf\x02\n" +
	"\rMemoryService\x12C\n" +
	"\fCreateMemory\x12\x1f.goodmem.v1.CreateMemoryRequest\x1a\x12.goodmem.v1.Memory\x12=\n" +
	"\tGetMemory\x12\x1c.goodmem.v1.GetMemoryRequest\x1a\x12.goodmem.v1.Memory\x12Q\n" +
	"\fListMemories\x12\x1f.goodmem.v1.ListMemoriesRequest\x1a .goodmem.v1.ListMemoriesResponse\x12G\n" +
	"\fDeleteMemory\x12\x1f.goodmem.v1.DeleteMemoryRequest\x1a\x16.google.protobuf.EmptyB/Z-github.com/pairsys/goodmem/cli/gen/goodmem/v1b\x06proto3"

var (
	file_goodmem_v1_memory_proto_rawDescOnce sync.Once
	file_goodmem_v1_memory_proto_rawDescData []byte
)

func file_goodmem_v1_memory_proto_rawDescGZIP() []byte {
	file_goodmem_v1_memory_proto_rawDescOnce.Do(func() {
		file_goodmem_v1_memory_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_goodmem_v1_memory_proto_rawDesc), len(file_goodmem_v1_memory_proto_rawDesc)))
	})
	return file_goodmem_v1_memory_proto_rawDescData
}

var file_goodmem_v1_memory_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_goodmem_v1_memory_proto_goTypes = []any{
	(*Memory)(nil),                // 0: goodmem.v1.Memory
	(*MemoryChunk)(nil),           // 1: goodmem.v1.MemoryChunk
	(*CreateMemoryRequest)(nil),   // 2: goodmem.v1.CreateMemoryRequest
	(*GetMemoryRequest)(nil),      // 3: goodmem.v1.GetMemoryRequest
	(*ListMemoriesRequest)(nil),   // 4: goodmem.v1.ListMemoriesRequest
	(*ListMemoriesResponse)(nil),  // 5: goodmem.v1.ListMemoriesResponse
	(*DeleteMemoryRequest)(nil),   // 6: goodmem.v1.DeleteMemoryRequest
	nil,                           // 7: goodmem.v1.Memory.MetadataEntry
	nil,                           // 8: goodmem.v1.CreateMemoryRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 10: google.protobuf.Empty
}
var file_goodmem_v1_memory_proto_depIdxs = []int32{
	7,  // 0: goodmem.v1.Memory.metadata:type_name -> goodmem.v1.Memory.MetadataEntry
	9,  // 1: goodmem.v1.Memory.created_at:type_name -> google.protobuf.Timestamp
	9,  // 2: goodmem.v1.Memory.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 3: goodmem.v1.MemoryChunk.created_at:type_name -> google.protobuf.Timestamp
	9,  // 4: goodmem.v1.MemoryChunk.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 5: goodmem.v1.CreateMemoryRequest.metadata:type_name -> goodmem.v1.CreateMemoryRequest.MetadataEntry
	0,  // 6: goodmem.v1.ListMemoriesResponse.memories:type_name -> goodmem.v1.Memory
	2,  // 7: goodmem.v1.MemoryService.CreateMemory:input_type -> goodmem.v1.CreateMemoryRequest
	3,  // 8: goodmem.v1.MemoryService.GetMemory:input_type -> goodmem.v1.GetMemoryRequest
	4,  // 9: goodmem.v1.MemoryService.ListMemories:input_type -> goodmem.v1.ListMemoriesRequest
	6,  // 10: goodmem.v1.MemoryService.DeleteMemory:input_type -> goodmem.v1.DeleteMemoryRequest
	0,  // 11: goodmem.v1.MemoryService.CreateMemory:output_type -> goodmem.v1.Memory
	0,  // 12: goodmem.v1.MemoryService.GetMemory:output_type -> goodmem.v1.Memory
	5,  // 13: goodmem.v1.MemoryService.ListMemories:output_type -> goodmem.v1.ListMemoriesResponse
	10, // 14: goodmem.v1.MemoryService.DeleteMemory:output_type -> google.protobuf.Empty
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_goodmem_v1_memory_proto_init() }
func file_goodmem_v1_memory_proto_init() {
	if File_goodmem_v1_memory_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_goodmem_v1_memory_proto_rawDesc), len(file_goodmem_v1_memory_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goodmem_v1_memory_proto_goTypes,
		DependencyIndexes: file_goodmem_v1_memory_proto_depIdxs,
		MessageInfos:      file_goodmem_v1_memory_proto_msgTypes,
	}.Build()
	File_goodmem_v1_memory_proto = out.File
	file_goodmem_v1_memory_proto_goTypes = nil
	file_goodmem_v1_memory_proto_depIdxs = nil
}
