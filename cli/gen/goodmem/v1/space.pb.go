// Code generated by protoc-gen-go. DO NOT EDIT.
// This is a stub file that would be generated by protoc-gen-go from space.proto
// For this exercise, we're including it as a stub

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

// Space message representing a storage unit in GoodMem
type Space struct {
	SpaceId        string                 `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels         map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EmbeddingModel string                 `protobuf:"bytes,4,opt,name=embedding_model,json=embeddingModel,proto3" json:"embedding_model,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	OwnerId        string                 `protobuf:"bytes,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	PublicRead     bool                   `protobuf:"varint,7,opt,name=public_read,json=publicRead,proto3" json:"public_read,omitempty"`
}

func (x *Space) Reset() {
	*x = Space{}
}

func (x *Space) String() string {
	return protoimpl.X.StringStringify(x)
}

func (*Space) ProtoMessage() {}

func (x *Space) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *Space) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Space) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Space) GetEmbeddingModel() string {
	if x != nil {
		return x.EmbeddingModel
	}
	return ""
}

func (x *Space) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Space) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Space) GetPublicRead() bool {
	if x != nil {
		return x.PublicRead
	}
	return false
}

// CreateSpaceRequest message
type CreateSpaceRequest struct {
	Name           string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels         map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EmbeddingModel string            `protobuf:"bytes,3,opt,name=embedding_model,json=embeddingModel,proto3" json:"embedding_model,omitempty"`
	PublicRead     bool              `protobuf:"varint,4,opt,name=public_read,json=publicRead,proto3" json:"public_read,omitempty"`
}

func (x *CreateSpaceRequest) Reset() {
	*x = CreateSpaceRequest{}
}

func (x *CreateSpaceRequest) String() string {
	return protoimpl.X.StringStringify(x)
}

func (*CreateSpaceRequest) ProtoMessage() {}

func (x *CreateSpaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSpaceRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateSpaceRequest) GetEmbeddingModel() string {
	if x != nil {
		return x.EmbeddingModel
	}
	return ""
}

func (x *CreateSpaceRequest) GetPublicRead() bool {
	if x != nil {
		return x.PublicRead
	}
	return false
}

// DeleteSpaceRequest message
type DeleteSpaceRequest struct {
	SpaceId string `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
}

func (x *DeleteSpaceRequest) Reset() {
	*x = DeleteSpaceRequest{}
}

func (x *DeleteSpaceRequest) String() string {
	return protoimpl.X.StringStringify(x)
}

func (*DeleteSpaceRequest) ProtoMessage() {}

func (x *DeleteSpaceRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

// ListSpacesRequest message
type ListSpacesRequest struct {
	LabelSelectors map[string]string `protobuf:"bytes,1,rep,name=label_selectors,json=labelSelectors,proto3" json:"label_selectors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListSpacesRequest) Reset() {
	*x = ListSpacesRequest{}
}

func (x *ListSpacesRequest) String() string {
	return protoimpl.X.StringStringify(x)
}

func (*ListSpacesRequest) ProtoMessage() {}

func (x *ListSpacesRequest) GetLabelSelectors() map[string]string {
	if x != nil {
		return x.LabelSelectors
	}
	return nil
}

// ListSpacesResponse message
type ListSpacesResponse struct {
	Spaces []*Space `protobuf:"bytes,1,rep,name=spaces,proto3" json:"spaces,omitempty"`
}

func (x *ListSpacesResponse) Reset() {
	*x = ListSpacesResponse{}
}

func (x *ListSpacesResponse) String() string {
	return protoimpl.X.StringStringify(x)
}

func (*ListSpacesResponse) ProtoMessage() {}

func (x *ListSpacesResponse) GetSpaces() []*Space {
	if x != nil {
		return x.Spaces
	}
	return nil
}