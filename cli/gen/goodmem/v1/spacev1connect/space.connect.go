// Code generated by protoc-gen-connect-go. DO NOT EDIT.
// This is a stub file that would be generated by protoc-gen-connect-go from space.proto
// For this exercise, we're including it as a stub

package spacev1connect

import (
	context "context"
	v1 "github.com/pairsys/goodmem/cli/gen/goodmem/v1"
	connect_go "github.com/bufbuild/connect-go"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// SpaceServiceName is the fully-qualified name of the SpaceService service.
	SpaceServiceName = "goodmem.v1.SpaceService"
)

// SpaceServiceClient is a client for the goodmem.v1.SpaceService service.
type SpaceServiceClient interface {
	CreateSpace(context.Context, *connect_go.Request[v1.CreateSpaceRequest]) (*connect_go.Response[v1.Space], error)
	DeleteSpace(context.Context, *connect_go.Request[v1.DeleteSpaceRequest]) (*connect_go.Response[emptypb.Empty], error)
	ListSpaces(context.Context, *connect_go.Request[v1.ListSpacesRequest]) (*connect_go.Response[v1.ListSpacesResponse], error)
}

// NewSpaceServiceClient constructs a client for the goodmem.v1.SpaceService service. By default, it
// uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and sends
// uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewSpaceServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) SpaceServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &spaceServiceClient{
		createSpace: connect_go.NewClient[v1.CreateSpaceRequest, v1.Space](
			httpClient,
			baseURL+"/goodmem.v1.SpaceService/CreateSpace",
			opts...,
		),
		deleteSpace: connect_go.NewClient[v1.DeleteSpaceRequest, emptypb.Empty](
			httpClient,
			baseURL+"/goodmem.v1.SpaceService/DeleteSpace",
			opts...,
		),
		listSpaces: connect_go.NewClient[v1.ListSpacesRequest, v1.ListSpacesResponse](
			httpClient,
			baseURL+"/goodmem.v1.SpaceService/ListSpaces",
			opts...,
		),
	}
}

// spaceServiceClient implements SpaceServiceClient.
type spaceServiceClient struct {
	createSpace *connect_go.Client[v1.CreateSpaceRequest, v1.Space]
	deleteSpace *connect_go.Client[v1.DeleteSpaceRequest, emptypb.Empty]
	listSpaces  *connect_go.Client[v1.ListSpacesRequest, v1.ListSpacesResponse]
}

// CreateSpace calls goodmem.v1.SpaceService.CreateSpace.
func (c *spaceServiceClient) CreateSpace(ctx context.Context, req *connect_go.Request[v1.CreateSpaceRequest]) (*connect_go.Response[v1.Space], error) {
	return c.createSpace.CallUnary(ctx, req)
}

// DeleteSpace calls goodmem.v1.SpaceService.DeleteSpace.
func (c *spaceServiceClient) DeleteSpace(ctx context.Context, req *connect_go.Request[v1.DeleteSpaceRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return c.deleteSpace.CallUnary(ctx, req)
}

// ListSpaces calls goodmem.v1.SpaceService.ListSpaces.
func (c *spaceServiceClient) ListSpaces(ctx context.Context, req *connect_go.Request[v1.ListSpacesRequest]) (*connect_go.Response[v1.ListSpacesResponse], error) {
	return c.listSpaces.CallUnary(ctx, req)
}